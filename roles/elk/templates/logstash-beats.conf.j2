input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate => "/etc/pki/client/cert.pem"
    ssl_key => "/etc/pki/client/cert.key"
    ssl_verify_mode => "none"
  }
}

filter {
    if [fields][host] == 'kong.{{ api_particulier_server_name }}' {
      mutate { add_tag => [ "%{[fields][host]}" ] }
      mutate { gsub => [ "url", "\?(.+)", "" ] }
      grok { match => { "message" => "%{IPORHOST:clientip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:verb} %{URIPATHPARAM:request}\" %{NUMBER:status} (?:%{NUMBER:bytes}|-) (?:\"(?:%{URI:referrer}|-)\"|%{QS:referrer}) %{QS:agent}" } }
      mutate { gsub => [ "request", "\?([^\s]+)", "" ] }
      mutate { gsub => [ "message", "\?([^\s]+)", "" ] }
      mutate { gsub => [ "message", "(\d+)\.(\d+)\.\d+\.\d+", "\1.\2.0.0" ] }
      mutate { gsub => [ "clientip", "^(\d+)\.(\d+)\.\d+\.\d+", "\1.\2.0.0" ] }
  }
    if [fields][host] == '{{ api_particulier_server_name }}' {
      json { source => "message" }
      mutate { add_tag => [ "%{[fields][host]}" ] }
      mutate { gsub => [ "message", "(\d+)\.(\d+)\.\d+\.\d+", "\1.\2.0.0" ] }
      mutate { gsub => [ "realIp", "^(\d+)\.(\d+)\.\d+\.\d+", "\1.\2.0.0" ] }
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    sniffing => true
    manage_template => false
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
  }
}
